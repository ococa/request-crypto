import r from"axios";const t=(t,n={})=>{const o=r.create(t);return function(r,t={}){const{encryptFn:n,decryptFn:o}=t;n&&r.interceptors.request.use((r=>{const t=r.transformRequest;if(!t)throw new Error(`request ${r} has no transformRequest`);if(!Array.isArray(t))throw new Error(`transformRequest ${t} is not an array`);if(t.push(n),!o)return r;const e=r.transformResponse;if(!e)throw new Error(`request ${r} has no transformResponse`);if("function"!=typeof o)throw new Error(`decryptFn ${o} is not a function`);if(!Array.isArray(e))throw new Error(`transformResponse ${e} is not an array`);return e.unshift(o),r}))}(o,n),o};const n=(r=16,t="high")=>{const n=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],o=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],e=[0,1,2,3,4,5,6,7,8,9],s=["!","@","-","_","=","<",">","#","*","%","+","&","^","$"],a=[];let i="";const h=function(...r){let t="";return r.forEach((r=>{t+=r[Math.floor(Math.random()*r.length)]})),t};switch(t){case"high":i+=h(n,o,e,s),a.push(...n,...o,...e,...s);break;case"medium":i+=h(n,o,e),a.push(...n,...o,...e);break;default:i+=h(n,e),a.push(...n,...e)}const u=r-i.length;for(let r=0;r<u;r++)i+=h(a);return i},o=r=>({...{randomPassword:n(16,"high"),algorithm:r||"SM4"}}),e=()=>({mode:"ecb",padding:"pkcs#7",output:"array"});export{t as createRequestInstance,o as getCryptoInfo,e as getSm4EncryptConfig,n as randomPassword};
